# ===============
#  .tmux.conf
# ===============

# Core {{{
set-option -g prefix C-j
unbind-key C-b

if-shell '[ "${TERM%-256color}" != "${TERM}" ]'      \
  'set-option -g default-terminal "screen-256color"' \
  'set-option -g default-terminal "screen"'

set-option -g escape-time 0

set-option -g mode-keys "vi"
set-option -g mouse off
set-option -g xterm-keys on

set-option -g set-titles on
set-option -g set-titles-string "#T (tmux #I:#W @#h)"

set-option -g aggressive-resize on
set-option -g automatic-rename on

set-option -g wrap-search on

set-option -g history-limit     1000000
set-option -g display-time            0
set-option -g display-panes-time  20000

set-option -g monitor-activity on
set-option -g monitor-bell off
set-option -g monitor-silence 0

set-option -g activity-action none
set-option -g bell-action none
set-option -g silence-action none

set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
#}}}
# Status {{{
set-option -g status on
set-option -g status-interval 5
set-option -g status-position "bottom"
set-option -g status-justify "left"
set-option -g status-style "fg=white,bg=default"

set-option -g status-left  "#{?client_prefix,#[fg=black]#[bg=green],#[reverse]} #h #[default] "
set-option -g status-left-length 20

if-shell '[ -f "/proc/loadavg" ]' {
  set-option -g status-right " [#(cut -d' ' -f1-3 /proc/loadavg)] %b.%-e (%a) %-k:%M"
} {
  set-option -g status-right " [#(sysctl -nq vm.loadavg | cut -d' ' -f2-4)] %b.%-e (%a) %-k:%M"
}
set-option -g status-right-length 40

set-option -g window-status-format " #I#F #W "
set-option -g window-status-current-format "#[bold][#I #W]#[default]"
#}}}

# Hook {{{
set-hook -g after-select-pane refresh-client
#}}}

# Keybind {{{
bind-key Escape send-prefix

bind-key [   copy-mode \; display-message '(Copy mode)'
bind-key \;  command-prompt

bind-key p   paste-buffer
bind-key C-p paste-buffer

bind-key c   new-window -c "#{pane_current_path}"
bind-key C-c new-window -c "#{pane_current_path}"
bind-key C-d detach-client
bind-key C-r refresh-client

bind-key j   next-window
bind-key C-j next-window
bind-key k   previous-window
bind-key C-k previous-window

bind-key l   choose-window
bind-key C-l choose-window

bind-key n   select-pane -t :.+
bind-key C-n select-pane -t :.+
bind-key b   select-pane -t :.-
bind-key C-b select-pane -t :.-

bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

bind-key s   split-window -v -c "#{pane_current_path}"
bind-key C-s split-window -v -c "#{pane_current_path}"
bind-key v   split-window -h -c "#{pane_current_path}"
bind-key C-v split-window -h -c "#{pane_current_path}"

bind-key o   kill-pane -a
bind-key C-o kill-pane -a
bind-key x   display-panes \; confirm-before -p 'Kill current pane #P (y/N)' kill-pane
bind-key C-x display-panes \; confirm-before -p 'Kill current pane #P (y/N)' kill-pane
bind-key q   display-panes \; confirm-before -p 'Kill current pane #P (y/N)' kill-pane
bind-key C-q display-panes \; confirm-before -p 'Kill current pane #P (y/N)' kill-pane

bind-key -T copy-mode-vi v   send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi Y send-keys -X copy-line

bind-key -T copy-mode-vi Space send-keys -X page-down

bind-key -T copy-mode-vi ? command-prompt -i -p '?' 'send -X search-backward-incremental "%%%"'
bind-key -T copy-mode-vi / command-prompt -i -p '/' 'send -X search-forward-incremental  "%%%"'
#}}}
