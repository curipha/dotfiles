# ===============
#  .tmux.conf
# ===============

# Core {{{
set-option -g prefix C-j
unbind-key C-b

if-shell '[[ ${TERM} == *-256color ]]'               \
  'set-option -g default-terminal "screen-256color"' \
  'set-option -g default-terminal "screen"'

set-option -g escape-time 0
set-option -g repeat-time 500

set-window-option -g mode-keys "vi"
set-window-option -g mouse off
set-window-option -g xterm-keys on

set-option -g set-titles on
set-option -g set-titles-string "#T (tmux#{?session_alerts,[#{session_alerts}],} #I:#W @#h)"

set-window-option -g aggressive-resize on
set-window-option -g automatic-rename on
set-window-option -g monitor-activity on

set-window-option -g wrap-search on

set-option -g history-limit     1000000
set-option -g display-time            0
set-option -g display-panes-time  20000

set-option -g bell-action "none"
set-option -g bell-on-alert off
set-option -g visual-bell off
#}}}
# Status {{{
set-option -g status on
set-option -g status-interval 1
set-option -g status-position "bottom"
set-option -g status-justify "left"
set-option -g status-style "fg=white,bg=default"

set-option -g status-left  "#{?client_prefix,#[fg=black]#[bg=green],#[reverse]} #h #[default] "
set-option -g status-left-length 20
set-option -g status-right " [#(uptime | awk -F'averages?: *' '{ print $2 }' | tr -d ',\r\n')] %b.%-e (%a) %-k:%M"
set-option -g status-right-length 40

set-window-option -g window-status-format " #I#F #W "
set-window-option -g window-status-current-format "#[bold][#I #W]#[default]"
#}}}
# Pane {{{
set-window-option -g pane-border-status off
set-window-option -g pane-border-format "#{?pane_active,#[bold],}[#P#{?pane_synchronized,:sync,}] #{pane_current_command} (#{pane_current_path})#[default]"
set-window-option -g pane-active-border-style "fg=green,bold,bg=default"

set-hook -g after-kill-pane "if-shell '(( #{window_panes} < 2 ))' 'set-window-option pane-border-status off'"
set-hook -g pane-exited     "if-shell '(( #{window_panes} < 2 ))' 'set-window-option pane-border-status off'"

set-hook -g after-split-window "if-shell '(( #{window_panes} > 1 ))' 'set-window-option pane-border-status bottom'"
#}}}

# Keybind {{{
bind-key Escape send-prefix

bind-key [   copy-mode \; display-message '(Copy mode)'

bind-key p   paste-buffer
bind-key C-p paste-buffer

bind-key c   new-window -c "#{pane_current_path}"
bind-key C-c new-window -c "#{pane_current_path}"
bind-key C-d detach-client
bind-key C-r refresh-client

bind-key    j   next-window
bind-key -r C-j next-window
bind-key    k   previous-window
bind-key -r C-k previous-window

bind-key l   choose-window
bind-key C-l choose-window

bind-key    n   select-pane -t :.+
bind-key -r C-n select-pane -t :.+
bind-key    b   select-pane -t :.-
bind-key -r C-b select-pane -t :.-

bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

bind-key s   split-window -v -c "#{pane_current_path}"
bind-key C-s split-window -v -c "#{pane_current_path}"
bind-key v   split-window -h -c "#{pane_current_path}"
bind-key C-v split-window -h -c "#{pane_current_path}"

bind-key o   kill-pane -a
bind-key C-o kill-pane -a
bind-key x   display-panes \; confirm-before -p 'Kill current pane #P (y/N)' kill-pane
bind-key C-x display-panes \; confirm-before -p 'Kill current pane #P (y/N)' kill-pane
bind-key q   display-panes \; confirm-before -p 'Kill current pane #P (y/N)' kill-pane
bind-key C-q display-panes \; confirm-before -p 'Kill current pane #P (y/N)' kill-pane

bind-key -t vi-copy v   begin-selection
bind-key -t vi-copy C-v rectangle-toggle

bind-key -t vi-copy y     copy-selection
bind-key -t vi-copy Enter copy-selection

bind-key -t vi-copy Y copy-line

bind-key -t vi-copy Space page-down
#}}}

